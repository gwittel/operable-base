<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>software.operable</groupId>
    <artifactId>operable-base</artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Operable Software Base POM</name>
    <description>Operable Software Base POM</description>
    <url>https://github.com/gwittel/operable-base</url>
    <inceptionYear>2017</inceptionYear>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>gwittel</id>
            <name>Greg Wittel</name>
            <email>TODO</email>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/gwittel/operable-base.git</connection>
        <developerConnection>scm:git:git@github.com:gwittel/operable-base.git</developerConnection>
        <url>http://github.com/gwittel/operable-base/tree/master</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Nexus Release Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <properties>
        <!-- Notes:
            General project level settings should be prefixed with 'project.'
            Properties specific to operable/base should be prefixed with 'op.'
            External dependencies should be prefixed with 'dep.'
        -->

        <!-- Maven Config (General project/maven settings should be prefixed with 'project.') -->

        <!--See https://cwiki.apache.org/confluence/display/MAVEN/POM+Element+for+Source+File+Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.targetJdk>1.8</project.build.targetJdk>
        <project.report.outputEncoding>UTF-8</project.report.outputEncoding>
        <project.report.inputEncoding>UTF-8</project.report.inputEncoding>

        <!-- Default jvm size for compiler, tests etc. -->
        <op.build.jvmsize>1024m</op.build.jvmsize>

        <!-- whether a release:perform automatically pushes the created files and tags to -->
        <!-- the upstream repository. Default is no. -->
        <op.release.push-changes>false</op.release.push-changes>

        <!-- define the thread count for parallel tests. -->
        <op.test.thread-count>1</op.test.thread-count>

        <!-- define the parallel mode for tests. Must be 'methods' for TestNG. -->
        <op.test.parallel/>

        <!-- define the JVM timezone to use when running tests. Default is 'UTC. -->
        <op.test.timezone>UTC</op.test.timezone>

        <!-- define the JVM size for forked tests. Defaults to build JVM size. -->
        <op.test.jvmsize>${op.build.jvmsize}</op.test.jvmsize>

        <!-- Lint mode for Javadoc. Defaults to 'all'. -->
        <op.javadoc.lint>all</op.javadoc.lint>

        <!-- Controls all the checkers run when building the project.            -->
        <!-- Can be activated with -Dop.check.skip-all=true on the command line. -->
        <op.check.skip-all>false</op.check.skip-all>
        <!-- Controls the basic checkers run when building the project.          -->
        <op.check.skip-basic>${op.check.skip-all}</op.check.skip-basic>
        <!-- Controls the extended checkers run when building the project.       -->
        <op.check.skip-extended>${op.check.skip-all}</op.check.skip-extended>

        <!-- basic checks -->
        <op.check.skip-enforcer>${op.check.skip-basic}</op.check.skip-enforcer>
        <op.check.skip-dependency>${op.check.skip-basic}</op.check.skip-dependency>
        <op.check.skip-duplicate-finder>${op.check.skip-basic}</op.check.skip-duplicate-finder>
        <op.check.skip-dependency-version-check>${op.check.skip-basic}</op.check.skip-dependency-version-check>
        <op.check.skip-dependency-scope>${op.check.skip-basic}</op.check.skip-dependency-scope>

        <!-- extended checks -->
        <op.check.skip-spotbugs>${op.check.skip-extended}</op.check.skip-spotbugs>
        <op.check.skip-pmd>${op.check.skip-extended}</op.check.skip-pmd>
        <op.check.skip-license>${op.check.skip-extended}</op.check.skip-license>
        <op.check.skip-jacoco>${op.check.skip-extended}</op.check.skip-jacoco>
        <op.check.skip-modernizer>${op.check.skip-extended}</op.check.skip-modernizer>

        <!-- all checks -->
        <op.check.fail-all>true</op.check.fail-all>
        <op.check.fail-basic>${op.check.fail-all}</op.check.fail-basic>
        <op.check.fail-extended>${op.check.fail-all}</op.check.fail-extended>

        <!-- basic checks -->
        <op.check.fail-enforcer>${op.check.fail-basic}</op.check.fail-enforcer>
        <op.check.fail-dependency>${op.check.fail-basic}</op.check.fail-dependency>
        <op.check.fail-duplicate-finder>${op.check.fail-basic}</op.check.fail-duplicate-finder>
        <op.check.fail-dependency-version-check>${op.check.fail-basic}</op.check.fail-dependency-version-check>
        <op.check.fail-dependency-scope>${op.check.fail-basic}</op.check.fail-dependency-scope>

        <!-- extended checks -->
        <op.check.fail-spotbugs>${op.check.fail-extended}</op.check.fail-spotbugs>
        <op.check.fail-pmd>${op.check.fail-extended}</op.check.fail-pmd>
        <op.check.fail-license>${op.check.fail-extended}</op.check.fail-license>
        <op.check.fail-modernizer>${op.check.fail-extended}</op.check.fail-modernizer>

        <!-- minimum maven version to build -->
        <op.maven.version>3.2.3</op.maven.version>

        <!-- minimum Java version to build -->
        <op.java.version>${project.build.targetJdk}</op.java.version>

        <!-- In Multimodule builds, override this to point at the parent directory for e.g. the license resources. -->
        <!-- See http://stackoverflow.com/questions/1012402/maven2-property-that-indicates-the-parent-directory    -->
        <op.main.basedir>${project.basedir}</op.main.basedir>

        <!-- Plugin versions used in multiple places -->
        <dep.plugin.scm.version>1.8.1</dep.plugin.scm.version>

        <!-- Packaging for the tarball deployment -->
        <dep.packaging.version>0.91</dep.packaging.version>

        <!-- Dependency versions that should be the same everywhere. -->
        <dep.guice.version>4.2.0</dep.guice.version>
        <dep.guava.version>25.0-jre</dep.guava.version>
        <dep.jackson.version>2.12.1</dep.jackson.version>
        <dep.cglib.version>2.2.2</dep.cglib.version>
        <dep.joda.version>2.9.9</dep.joda.version>
        <dep.spotbugs-annotations.version>3.1.0-RC5</dep.spotbugs-annotations.version>
        <dep.testng.version>6.9.6</dep.testng.version>
        <dep.assertj-core.version>3.5.2</dep.assertj-core.version>
        <dep.assertj-guava.version>3.1.0</dep.assertj-guava.version>
        <dep.assertj-joda-time.version>2.0.0</dep.assertj-joda-time.version>
        <dep.assertj-db.version>1.1.1</dep.assertj-db.version>
        <dep.hamcrest.version>1.3</dep.hamcrest.version>
        <dep.mockito.version>1.9.5</dep.mockito.version>
        <dep.objenesis.version>1.3</dep.objenesis.version>
        <dep.jmh.version>1.15</dep.jmh.version>
    </properties>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-provider-gitexe</artifactId>
                <version>${dep.plugin.scm.version}</version>
            </extension>
            <extension>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-manager-plexus</artifactId>
                <version>${dep.plugin.scm.version}</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>${dep.plugin.scm.version}</version>
                    <configuration>
                        <connectionType>developerConnection</connectionType>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.7</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M1</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skip>${op.check.skip-enforcer}</skip>
                        <fail>${op.check.fail-enforcer}</fail>
                        <failFast>false</failFast>
                        <rules>
                            <!-- The following dependencies are hazardous for builds. -->
                            <bannedDependencies>
                                <excludes>
                                    <!-- clashes with commons-logging:commons-logging -->
                                    <exclude>commons-logging:commons-logging-api</exclude>
                                    <!-- clashes with cglib:cglib-nodep -->
                                    <exclude>cglib:cglib</exclude>
                                    <!-- old versions of junit repackage hamcrest -->
                                    <exclude>junit:junit</exclude>
                                    <!-- use guava -->
                                    <exclude>com.google.collections:google-collections</exclude>
                                    <!-- but not the badly numbered ones... -->
                                    <exclude>com.google.guava:guava</exclude>
                                    <!-- Contains FindBugs annotations, JSR-305 and JCIP annotations -->
                                    <exclude>com.google.code.findbugs:annotations</exclude>
                                    <!-- Use the official version at javax.servlet:javax.servlet-api -->
                                    <exclude>org.eclipse.jetty.orbit:javax.servlet</exclude>
                                </excludes>
                                <includes>
                                    <!-- whitelist the well numbered guava releases -->
                                    <include>com.google.guava:guava:[10.0.1,)</include>
                                    <!-- newer versions of junit do not repackage hamcrest -->
                                    <include>junit:junit:[4.11,)</include>
                                </includes>
                            </bannedDependencies>
                            <requireMavenVersion>
                                <version>${op.maven.version}</version>
                            </requireMavenVersion>
                            <requireJavaVersion>
                                <version>${op.java.version}</version>
                            </requireJavaVersion>
                        </rules>
                    </configuration>
                </plugin>

                <!-- 2017-11-02 This is broken in Java 9
                    https://issues.apache.org/jira/browse/MDEP-559
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.0.2</version>
                    <configuration>
                        <skip>${op.check.skip-dependency}</skip>
                        <failOnWarning>${op.check.fail-dependency}</failOnWarning>
                        <ignoreNonCompile>true</ignoreNonCompile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>analyze-only</goal>
                                <goal>analyze-duplicate</goal>
                                <goal>analyze-dep-mgt</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Tweak the compiler to use more memory and use UTF-8 for the source code. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.2</version>
                    <configuration>
                        <source>${project.build.targetJdk}</source>
                        <target>${project.build.targetJdk}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <maxmem>${op.build.jvmsize}</maxmem>
                        <showWarnings>true</showWarnings>
                        <fork>true</fork>
                    </configuration>
                </plugin>

                <!-- Resource plugins should always use UTF-8 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <!-- must be true for jar-with-dependencies builds -->
                        <appendAssemblyId>true</appendAssemblyId>
                        <!-- Always use GNU tar mode. -->
                        <tarLongFileMode>gnu</tarLongFileMode>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                    <configuration>
                        <systemPropertyVariables>
                            <sun.jnu.encoding>${project.build.sourceEncoding}</sun.jnu.encoding>
                            <user.timezone>${op.test.timezone}</user.timezone>
                            <java.awt.headless>true</java.awt.headless>
                            <java.util.logging.SimpleFormatter.format>%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s %5$s%6$s%n</java.util.logging.SimpleFormatter.format>
                        </systemPropertyVariables>
                        <runOrder>random</runOrder>
                        <parallel>${op.test.parallel}</parallel>
                        <threadCount>${op.test.thread-count}</threadCount>
                        <argLine>
                            ${argLine}
                            -Dfile.encoding=${project.build.sourceEncoding}
                            -Xmx${op.test.jvmsize}
                            -Xms${op.test.jvmsize}
                            -XX:OnOutOfMemoryError="kill -9 %p"
                            -XX:+HeapDumpOnOutOfMemoryError
                        </argLine>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <releaseProfiles>oss-release</releaseProfiles>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <mavenExecutorId>forked-path</mavenExecutorId>
                        <pushChanges>${op.release.push-changes}</pushChanges>
                        <localCheckout>true</localCheckout>
                        <preparationGoals>clean install</preparationGoals>
                        <tagNameFormat>@{project.version}</tagNameFormat>
                        <useReleaseProfile>false</useReleaseProfile>
                        <goals>deploy</goals>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.4</version>
                    <configuration>
                        <quiet>true</quiet>
                        <source>${project.build.targetJdk}</source>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <maxmemory>${op.build.jvmsize}</maxmemory>
                        <additionalparam>-Xdoclint:${op.javadoc.lint}</additionalparam>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Always build a jar with the test classes -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <executions>
                        <execution>
                            <id>attach-tests</id>
                            <phase>package</phase>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- do not build an empty jar if the project is
                             e.g. a pom project -->
                        <skipIfEmpty>true</skipIfEmpty>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addClasspath>false</addClasspath>
                            </manifest>
                            <manifestEntries>
                                <!-- This is actually the time when the build was done -->
                                <Build-Time>${git.build.time}</Build-Time>
                                <Git-Commit-Id>${git.commit.id}</Git-Commit-Id>
                                <Implementation-Version>${git.commit.id.describe}</Implementation-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>2.1.13</version>
                    <configuration>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ssZZ</dateFormat>
                        <gitDescribe>
                            <tags>true</tags>
                        </gitDescribe>
                    </configuration>
                </plugin>

                <!-- bundle up source code into jars for both the main and the test sources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                                <goal>test-jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.ning.maven.plugins</groupId>
                    <artifactId>maven-duplicate-finder-plugin</artifactId>
                    <version>1.0.6</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skip>${op.check.skip-duplicate-finder}</skip>
                        <failBuildInCaseOfConflict>${op.check.fail-duplicate-finder}</failBuildInCaseOfConflict>
                        <exceptions>
                            <exception>
                                <conflictingDependencies/>
                            </exception>
                            <!-- Well done, Apache... -->
                            <exception>
                                <conflictingDependencies>
                                    <dependency>
                                        <groupId>commons-beanutils</groupId>
                                        <artifactId>commons-beanutils</artifactId>
                                    </dependency>
                                    <dependency>
                                        <groupId>commons-beanutils</groupId>
                                        <artifactId>commons-beanutils-core</artifactId>
                                    </dependency>
                                    <dependency>
                                        <groupId>commons-collections</groupId>
                                        <artifactId>commons-collections</artifactId>
                                    </dependency>
                                </conflictingDependencies>
                                <classes>
                                    <class>org.apache.commons.collections.ArrayStack</class>
                                    <class>org.apache.commons.collections.Buffer</class>
                                    <class>org.apache.commons.collections.BufferUnderflowException</class>
                                    <class>org.apache.commons.collections.FastHashMap</class>
                                </classes>
                            </exception>
                            <exception>
                                <conflictingDependencies>
                                    <dependency>
                                        <groupId>commons-beanutils</groupId>
                                        <artifactId>commons-beanutils</artifactId>
                                    </dependency>
                                    <dependency>
                                        <groupId>commons-beanutils</groupId>
                                        <artifactId>commons-beanutils-core</artifactId>
                                    </dependency>
                                </conflictingDependencies>
                                <packages>
                                    <package>org.apache.commons.beanutils</package>
                                </packages>
                            </exception>
                        </exceptions>
                        <!-- Ruby is hopeless -->
                        <ignoredDependencies>
                            <dependency>
                                <groupId>org.jruby</groupId>
                                <artifactId>jruby-complete</artifactId>
                            </dependency>
                        </ignoredDependencies>
                        <ignoredResources>
                            <ignoredResource>.*\.html</ignoredResource>
                            <ignoredResource>META-INF/.*</ignoredResource>
                            <ignoredResource>about_files/.*</ignoredResource>
                            <ignoredResource>plugin\.properties</ignoredResource>
                            <ignoredResource>.*\.java</ignoredResource>
                            <ignoredResource>THIRD-PARTY</ignoredResource>
                        </ignoredResources>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.ning.maven.plugins</groupId>
                    <artifactId>maven-dependency-versions-check-plugin</artifactId>
                    <version>2.0.4</version>
                    <configuration>
                        <skip>${op.check.skip-dependency-version-check}</skip>
                        <failBuildInCaseOfConflict>${op.check.fail-dependency-version-check}</failBuildInCaseOfConflict>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.hubspot.maven.plugins</groupId>
                    <artifactId>dependency-scope-maven-plugin</artifactId>
                    <version>0.8</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <skip>${op.check.skip-dependency-scope}</skip>
                                <fail>${op.check.fail-dependency-scope}</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.github.hazendaz.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>3.1.0-RC4</version>
                    <configuration>
                        <skip>${op.check.skip-spotbugs}</skip>
                        <jvmArgs>-Xmx${op.build.jvmsize}</jvmArgs>
                        <failOnError>${op.check.fail-spotbugs}</failOnError>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.7</version>
                    <configuration>
                        <skip>${op.check.skip-pmd}</skip>
                        <failOnViolation>${op.check.fail-pmd}</failOnViolation>
                        <targetJdk>${project.build.targetJdk}</targetJdk>
                        <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                        <minimumTokens>100</minimumTokens>
                        <excludes>
                            <exclude>**/*Bean.java</exclude>
                            <exclude>**/generated/*.java</exclude>
                        </excludes>
                        <excludeRoots>
                            <excludeRoot>target/generated-sources/stubs</excludeRoot>
                        </excludeRoots>
                        <rulesets>
                            <ruleset>/rulesets/java/basic.xml</ruleset>
                            <ruleset>/rulesets/java/clone.xml</ruleset>
                            <ruleset>/rulesets/java/finalizers.xml</ruleset>
                        </rulesets>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.9</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skip>${op.check.skip-jacoco}</skip>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <version>1.5.0</version>
                    <configuration>
                        <skip>${op.check.skip-modernizer}</skip>
                        <failOnViolations>${op.check.fail-modernizer}</failOnViolations>
                        <javaVersion>${project.build.targetJdk}</javaVersion>
                    </configuration>
                    <executions>
                        <execution>
                            <id>modernizer</id>
                            <goals>
                                <goal>modernizer</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.4</version>
                    <configuration>
                        <useAgent>true</useAgent>
                    </configuration>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.2</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <!-- This is the list of plugins used for the main build. -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.ning.maven.plugins</groupId>
                <artifactId>maven-dependency-versions-check-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.ning.maven.plugins</groupId>
                <artifactId>maven-duplicate-finder-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.github.hazendaz.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.hubspot.maven.plugins</groupId>
                <artifactId>dependency-scope-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- The following dependency should be the same everywhere. -->
    <dependencyManagement>
        <dependencies>
            <!-- Google Guice -->
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${dep.guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-servlet</artifactId>
                <version>${dep.guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-assistedinject</artifactId>
                <version>${dep.guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-multibindings</artifactId>
                <version>${dep.guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-throwingproviders</artifactId>
                <version>${dep.guice.version}</version>
            </dependency>

            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${dep.guava.version}</version>
            </dependency>

            <!-- Java APIs -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${dep.javax-inject.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${dep.javax-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${dep.javax-validation.version}</version>
            </dependency>

            <!-- jsr 250 -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.2</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-smile</artifactId>
                <version>${dep.jackson.version}</version>
            </dependency>

            <!-- misc stuff -->

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${dep.joda.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${dep.cglib.version}</version>
            </dependency>

            <!-- FindBugs / SpotBugs -->
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${dep.spotbugs-annotations.version}</version>
            </dependency>

            <!-- JSR-305 -->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>3.0.2</version>
            </dependency>

            <!-- jmh -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${dep.jmh.version}</version>
            </dependency>

            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${dep.jmh.version}</version>
            </dependency>

            <!-- Testing -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${dep.testng.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.inject</groupId>
                        <artifactId>guice</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${dep.assertj-core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-guava</artifactId>
                <version>${dep.assertj-guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-joda-time</artifactId>
                <version>${dep.assertj-joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-db</artifactId>
                <version>${dep.assertj-db.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${dep.mockito.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${dep.hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${dep.hamcrest.version}</version>
            </dependency>

            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${dep.objenesis.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>child-project-release</id>
            <properties>
                <!-- tests run in the preparation step of the release -->
                <skipTests>true</skipTests>
                <platform.check.skip-extended>true</platform.check.skip-extended>
            </properties>
        </profile>

        <profile>
            <id>sonatype-oss-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>ci</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
